const {
    wasm, requireWasmInitialized
} = require('./init_wasm');

// This ends up pointing to a CJS version of the ES module generated by wasm-pack
// which is done post-compile via rollup
/*const {
    generateRandomFieldElement, generateRandomG1Element, generateRandomG2Element,
    generateFieldElementFromBytes, fieldElementAsBytes, generateChallengeFromBytes,
    generateFieldElementFromNumber, pedersenCommitmentG1, pedersenCommitmentG2
} = require("./index");*/

module.exports.generateRandomFieldElement = (seed) => {
    requireWasmInitialized();
    return wasm.generateRandomFieldElement(seed);
};

module.exports.generateRandomG1Element = () => {
    requireWasmInitialized();
    return wasm.generateRandomG1Element();
};

module.exports.generateRandomG2Element = () => {
    requireWasmInitialized();
    return wasm.generateRandomG2Element();
};

module.exports.generateFieldElementFromBytes = (bytes) => {
    requireWasmInitialized();
    return wasm.generateFieldElementFromBytes(bytes);
};

module.exports.fieldElementAsBytes = (element) => {
    requireWasmInitialized();
    return wasm.fieldElementAsBytes(element);
};

module.exports.generateChallengeFromBytes = (bytes) => {
    requireWasmInitialized();
    return wasm.generateChallengeFromBytes(bytes);
};

module.exports.generateFieldElementFromNumber = (num) => {
    requireWasmInitialized();
    if (!Number.isInteger(num) || num < 0) {
        throw new Error(`Need a positive integer to encode but found ${num} `);
    }
    // Following can be done using bit shifts, but they only work for small number of shifts. Checked in Chrome and FF
    if (num.toString(2).length > 32) {
        throw new Error(`Need a positive integer of at most 32 bits but found ${num}`);
    }
    return wasm.generateFieldElementFromNumber(num);
};

module.exports.pedersenCommitmentG1 = (bases, messages) => {
    requireWasmInitialized();
    return wasm.pedersenCommitmentG1(bases, messages);
};

module.exports.pedersenCommitmentG2 = (bases, messages) => {
    requireWasmInitialized();
    return wasm.pedersenCommitmentG2(bases, messages);
};
