[package]
authors = ["Dock.io", "Tobias Looker <tobias.looker@mattr.global>", "Mike Lodder <redmike7@gmail.com>"]
description = "WASM binding to Dock's crypto lib"
edition = "2021"
license = "Apache-2.0"
name = "dock_crypto_wasm"
repository = "https://github.com/docknetwork/crypto-wasm"
version = "0.13.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
console = ["console_error_panic_hook"]
default = ["dlmalloc"]

[dependencies]
console_error_panic_hook = { version = "0.1.1", optional = true }
js-sys = "0.3"
rand = { version = "0.7", features = ["wasm-bindgen"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0"}
serde-wasm-bindgen = "0.4.3"
wasm-bindgen = "= 0.2.84"
dlmalloc = { version = "0.2.4", features = ["global"], optional = true }
bbs_plus = { version = "0.13.0", default-features = false, path = "../dock-crypto/crypto/bbs_plus" }
vb_accumulator = { version = "0.13.0", default-features = false, path = "../dock-crypto/crypto/vb_accumulator" }
schnorr_pok = { version = "0.10.0", default-features = false, path = "../dock-crypto/crypto/schnorr_pok" }
proof_system = { version = "0.19.0", default-features = false, path = "../dock-crypto/crypto/proof_system" }
coconut-crypto = { version = "0.2.0", default-features = false, path = "../dock-crypto/crypto/coconut" }
dock_crypto_utils = { version = "0.11.0", default-features = false, path = "../dock-crypto/crypto/utils" }
saver = { version = "0.10.0", default-features = false, path = "../dock-crypto/crypto/saver" }
legogroth16 = {version = "0.7.0", default-features = false, features = ["circom", "wasmer-js"], path = "../dock-crypto/crypto/legogroth16" }
serde_with = { version = "1.10.0", default-features = false, features = ["macros"] }

ark-ec = { version = "^0.4.0", default-features = false }
ark-ff = { version = "^0.4.0", default-features = false }
ark-relations = { version = "^0.4.0", default-features = false }
ark-bls12-381 = { version = "^0.4.0", default-features = false, features = [ "curve" ] }
ark-serialize = { version = "^0.4.0", default-features = false, features = [ "derive" ] }
blake2 = { version = "0.10.6", default-features = false }
getrandom = { version = "0.2", features = ["js"] }
ark-std = { version = "^0.4.0", default-features = false }
zeroize = { version = "1.6.0", features = ["derive"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.33"

[dev-dependencies.web-sys]
version = "0.3"
features = [
    'console'
]

[profile.release]
lto = true
opt-level = 3

[package.metadata.wasm-pack.profile.dev]
# Should `wasm-opt` be used to further optimize the wasm binary generated after
# the Rust compiler has finished? Using `wasm-opt` can often further decrease
# binary size or do clever tricks that haven't made their way into LLVM yet.
#
# Configuration is set to `false` by default for the dev profile, but it can
# be set to an array of strings which are explicit arguments to pass to
# `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# would execute very expensive optimizations passes
wasm-opt = false

[package.metadata.wasm-pack.profile.dev.wasm-bindgen]
# Should we enable wasm-bindgen's debug assertions in its generated JS glue?
debug-js-glue = true
# Should wasm-bindgen demangle the symbols in the "name" custom section?
demangle-name-section = true

[profile.wasm-profiling]
inherits = "release"

[package.metadata.wasm-pack.profile.profiling]
wasm-opt = ['-O4']

[package.metadata.wasm-pack.profile.profiling.wasm-bindgen]
debug-js-glue = false
demangle-name-section = false
dwarf-debug-info = false

[profile.wasm-release]
inherits = "release"

[package.metadata.wasm-pack.profile.release]
wasm-opt = ['-O']

[package.metadata.wasm-pack.profile.release.wasm-bindgen]
debug-js-glue = false
demangle-name-section = true
dwarf-debug-info = false
